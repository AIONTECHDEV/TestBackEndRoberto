{
  "swagger": "2.0",
  "info": {
    "title": "Prueba Tecnica AionTech",
    "description": "Ejemplo de la prueba tecnica",
    "version": "1.0.0",
    "contact": {
      "email": "robert.torres.lopez@gmail.com"
    }
  },
  "host": "localhost:8080",
  "tags": [
    {
      "name": "login",
      "description": "Manejo de registro de usuarios"
    },
    {
      "name": "AccountsOperations",
      "description": "Manejo de las transacciones"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "obtener token del usuario",
        "description": "en el archivo /Data/account se obtiene los datos owner, el numero de cuenta y la contrase√±a",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "getAccountToken",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loginObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/accountModel"
            }
          }
        }
      }
    },
    "/account/transfer": {
      "post": {
        "tags": [
          "AccountsOperations"
        ],
        "summary": "Transferir dinero entre cuentas",
        "description": "verificamos que el usuario que envia el dinero tenga mas de -500 para poder realizar la transaction",
        "security": [
          {
            "JWT": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "transactionToSend",
            "in": "body",
            "description": "getAccountToken",
            "required": true,
            "schema": {
              "$ref": "#/definitions/transactionModelToSend"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/accountModel"
            }
          },
          "401": {
            "description": "Unauthorized, token no valido"
          },
          "403": {
            "description": "recursosInsuficientes"
          }
        }
      }
    },
    "/transactions/received": {
      "get": {
        "tags": [
          "AccountsOperations"
        ],
        "summary": "Obtener las transacciones donde la cuenta recibio dinero",
        "description": "Obtener las transacciones donde la cuenta recibio dinero",
        "security": [
          {
            "JWT": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/transactionModel"
            }
          },
          "401": {
            "description": "Unauthorized, token no valido"
          }
        }
      }
    },
    "/transactions/sent": {
      "get": {
        "tags": [
          "AccountsOperations"
        ],
        "summary": "Obtener las transacciones donde la cuenta envio dinero",
        "description": "Obtener las transacciones donde la cuenta envio dinero",
        "security": [
          {
            "JWT": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/transactionModel"
            }
          },
          "401": {
            "description": "Unauthorized, token no valido"
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "tags": [
          "AccountsOperations"
        ],
        "summary": "Obtener todas las transacciones de la cuenta",
        "description": "Obtener todas las transacciones de la cuenta",
        "security": [
          {
            "JWT": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/transactionModel"
            }
          },
          "401": {
            "description": "Unauthorized, token no valido"
          }
        }
      }
    },
    "/balance": {
      "get": {
        "tags": [
          "AccountsOperations"
        ],
        "summary": "Obtener todas las transacciones de la cuenta",
        "description": "Obtener todas las transacciones de la cuenta",
        "security": [
          {
            "JWT": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/accountModel"
            }
          },
          "401": {
            "description": "Unauthorized, token no valido"
          }
        }
      }
    }
  },
  "definitions": {
    "loginObject": {
      "type": "object",
      "properties": {
        "user": {
          "type": "integer"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "accountModel": {
      "type": "object",
      "properties": {
        "account": {
          "type": "integer"
        },
        "balance": {
          "type": "integer"
        },
        "owner": {
          "type": "integer"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "transactionModel": {
      "type": "array",
      "items": {
        "properties": {
          "fromAccount": {
            "type": "integer"
          },
          "toAccount": {
            "type": "integer"
          },
          "amount": {
            "type": "integer"
          },
          "sentAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "transactionModelToSend": {
      "type": "object",
      "properties": {
        "fromAccount": {
          "type": "integer"
        },
        "toAccount": {
          "type": "integer"
        },
        "amount": {
          "type": "integer"
        }
      }
    }
  },
  "securityDefinitions": {
    "JWT": {
      "description": "",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}